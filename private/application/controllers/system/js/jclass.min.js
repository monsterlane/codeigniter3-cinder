/**
 * jclass v1.2.1
 * https://github.com/riga/jclass
 *
 * Marcel Rieger, 2015
 * MIT licensed, http://www.opensource.org/licenses/mit-license
 */
(function(h){"function"==typeof define&&define.amd?define([],h):"object"==typeof exports?(exports=h(),"object"==typeof module&&(module.exports=exports)):window?window.JClass=h():"object"==typeof console&&console.error instanceof Function&&console.error("cannot determine environment")})(function(){var h=function(a){var c=Array.prototype.slice.call(arguments,1),d;for(d in c){var b=c[d];if("object"==typeof b)for(var e in b)a[e]=b[e]}return a},n={_isClassObject:!1},m=!1,e=function(){};e._subClasses=[];e.prototype.init=function(){};e._extend=function(a,c,d){void 0===a&&(a={});void 0===c&&(c={});void 0===d&&(d={});d=h({},n,d);var b=function(){m||(this._class=b,this.init instanceof Function&&this.init.apply(this,arguments))};m=!0;var l=new this;m=!1;var p=this.prototype;b.prototype=l;b.prototype.constructor=b;b._superClass=this;b._subClasses=[];this._subClasses.push(b);b._extend=this._extend;b._extends=function(a){return this._superClass==e?!1:a==this._superClass||a==e?!0:this._superClass._extends(a)};for(var k in a){var f=Object.getOwnPropertyDescriptor(a,k),g=f.value;null!==g&&"object"==typeof g&&g.descriptor?Object.defineProperty(l,k,g):"value"in f||!("set"in f||"get"in f)?(l[k]=g,f=p[k],g instanceof Function&&f instanceof Function&&g!==f&&(g._super=f)):Object.defineProperty(l,k,f)}d._isClassObject||(a=void 0===this._members?e:this._members._class,d=h({},d,{_isClassObject:!0}),c=a._extend(c,{},d),c._instanceClass=b,b._members=new c);return b};e._convert=function(a,c){var d=a.prototype;d.init=function(){var b=this._origin=e._construct(a,arguments);Object.keys(b).forEach(function(a){b.hasOwnProperty(a)&&Object.defineProperty(this,a,{get:function(){return b[a]}})},this)};return e._extend(d,{},c)};e._construct=function(a,c){void 0===c&&(c=[]);var d=function(){return a.apply(this,c)};d.prototype=a.prototype;return new d};e._superDescriptor=function(a,c){"_class"in a&&a instanceof a._class&&(a=a._class);if("_extends"in a&&a._extends instanceof Function&&a._extends(this))return Object.getOwnPropertyDescriptor(a._superClass.prototype,c)};return e});
